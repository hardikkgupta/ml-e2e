name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Lint with flake8
      run: |
        pip3 install flake8
        flake8 app/ tests/ models/

    - name: Test with pytest
      run: |
        pip install pytest
        pytest tests/

    - name: Build Docker Image
      run: |
        docker build -t ml-e2e .

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure AWS Credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Tag Docker Image
      run: |
        ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker tag ml-e2e:latest $ECR_REGISTRY/ml-e2e:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Push Docker Image to ECR
      run: |
        ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker push $ECR_REGISTRY/ml-e2e:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          docker pull ${{ secrets.ECR_REGISTRY }}/ml-e2e:latest
          docker stop ml-e2e || true
          docker rm ml-e2e || true
          docker run -d -p 80:5000 --name ml-e2e ${{ secrets.ECR_REGISTRY }}/ml-e2e:latest
        debug: true
